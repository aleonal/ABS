# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Causation Extractor.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtGui import QStandardItem
from PyQt5.QtCore import *
from CausationExtractor import CausationExtractor
from ProjectInfoWidget import ProjectInfoWidget
from datetime import datetime
import json

class CausationExtractorWidget(QWidget):

    def __init__(self, previous_window=None, project_config=None):
        super().__init__()
        self.previous_window = previous_window
        self.project_config = project_config
        self.UI()
        self.show()
        self.startCE()

    def startCE(self):
        with open(self.project_config) as json_file:
            data = json.load(json_file)
            self.progress.setProperty("value", 5)
            self.CE = CausationExtractor.CausationExtractor()
            self.progress.setProperty("value", 10)
            self.CE.set_eceld_project_root(project_root=data['eceld_root'])
            self.progress.setProperty("value", 15)
            self.CE.set_output_folder(output_folder=data['project_root'])
            self.progress.setProperty("value", 20)
            milliseconds = float(data['timeframe'])
            timeframe = datetime.fromtimestamp(milliseconds/1000.0)
            formattedTimeframe = timeframe.strftime("%H:%M:%S")
            self.CE.set_time_frame(t=formattedTimeframe)
            self.progress.setProperty("value", 25)
            self.CE.load_salient_artifacts()
            self.progress.setProperty("value", 35)
            self.CE.import_events()
            self.progress.setProperty("value", 50)
            self.CE.group_by_time()
            self.progress.setProperty("value", 75)
            self.CE.group_by_salient_artifacts()
            self.progress.setProperty("value", 100)
        

    def UI(self):
        self.setObjectName("Widget")
        self.resize(320, 240)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        self.setMinimumSize(QtCore.QSize(320, 240))

        self.layoutWidget = QtWidgets.QWidget(self)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 301, 221))
        self.layoutWidget.setObjectName("layoutWidget")
        self.widget_layout = QtWidgets.QGridLayout(self.layoutWidget)
        self.widget_layout.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.widget_layout.setContentsMargins(0, 0, 0, 0)
        self.widget_layout.setSpacing(0)
        self.widget_layout.setObjectName("widget_layout")
        self.progress = QtWidgets.QProgressBar(self.layoutWidget)
        self.progress.setProperty("value", 0)
        self.progress.setObjectName("progress")
        self.widget_layout.addWidget(self.progress, 1, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.layoutWidget)#Continue
        self.pushButton2 = QtWidgets.QPushButton(self.layoutWidget)#Canncel
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setCheckable(False)
        self.pushButton.setAutoDefault(False)
        self.pushButton.setDefault(False)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.widget_layout.addWidget(self.pushButton, 2, 0, 1, 1, QtCore.Qt.AlignLeft)#Continue
        self.pushButton.clicked.connect(self.launchProjectInfoWidget)
        self.pushButton2.clicked.connect(self.closeRoutine)
        self.pushButton2.setSizePolicy(sizePolicy)
        self.pushButton2.setCheckable(False)
        self.pushButton2.setAutoDefault(False)
        self.pushButton2.setDefault(False)
        self.pushButton2.setFlat(False)
        self.pushButton2.setObjectName("pushButton")
        self.widget_layout.addWidget(self.pushButton2, 2, 0, 1, 1, QtCore.Qt.AlignRight)#Cancel

        self.progress_text = QtWidgets.QLabel(self.layoutWidget)
        self.progress_text.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_text.setObjectName("progress_text")
        self.widget_layout.addWidget(self.progress_text, 0, 0, 1, 1)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Widget", "Causation Extractor"))
        self.pushButton.setText(_translate("Widget", "Continue"))
        self.pushButton2.setText(_translate("Widget", "Cancel"))
        self.progress_text.setText(_translate("Widget", "Progress info"))

    def launchProjectInfoWidget(self):
        self.project_info_widget = ProjectInfoWidget(previous_window=self)
        self.project_info_widget.show()
        self.hide()

    def closeRoutine(self):
    #(TODO): show dialog confirming action. If yes, close (cancel ingestion), if not continue

        if self.previous_window:
            self.previous_window.show()
            self.hide()
        else:
            self.hide()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = CausationExtractorWidget()
    ui.show()
    sys.exit(app.exec_())
